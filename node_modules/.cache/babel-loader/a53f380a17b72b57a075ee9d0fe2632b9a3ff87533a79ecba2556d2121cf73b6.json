{"ast":null,"code":"import { ADD_INSCRIPTION, REMOVE_INSCRIPTION, EDIT_INSCRIPTION } from '../Actions/actions';\nconst initialState = [{\n  id: 1,\n  nom: \"a\",\n  filiere: 'FUS'\n}, {\n  id: 2,\n  nom: \"b\",\n  filiere: 'CYBER SECURITY'\n}, {\n  id: 3,\n  nom: \"c\",\n  filiere: 'mobile'\n}, {\n  id: 4,\n  nom: \"d\",\n  filiere: 'CYBER SECURITY'\n}, {\n  id: 5,\n  nom: \"e\",\n  filiere: 'FUS'\n}];\nexport function inscriptionReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_INSCRIPTION:\n      return [...state, action.payload];\n    case REMOVE_INSCRIPTION:\n      return [...state.filter(inscription => inscription.id !== action.payload)];\n    case EDIT_INSCRIPTION:\n      const Editinscriprtion = state.find(elm => elm.id == action.payload.id);\n      Editinscriprtion.nom = action.payload.nom;\n      Editinscriprtion.filiere = action.payload.filiere;\n      return state;\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["ADD_INSCRIPTION","REMOVE_INSCRIPTION","EDIT_INSCRIPTION","initialState","id","nom","filiere","inscriptionReducer","state","action","type","payload","filter","inscription","Editinscriprtion","find","elm"],"sources":["E:/Ofppt  2 eme annee/Cours Classe/C12- DÃ©velopper en Front-end/Seance 2/Seance 2 Exp/ReactTest7/test7/src/EXOS2/Reducers/inscriptionReducer.js"],"sourcesContent":["import { ADD_INSCRIPTION, REMOVE_INSCRIPTION, EDIT_INSCRIPTION } from '../Actions/actions'\r\nconst initialState = [\r\n    { id: 1, nom: \"a\", filiere: 'FUS' },\r\n    { id: 2, nom: \"b\", filiere: 'CYBER SECURITY' },\r\n    { id: 3, nom: \"c\", filiere: 'mobile' },\r\n    { id: 4, nom: \"d\", filiere: 'CYBER SECURITY' },\r\n    { id: 5, nom: \"e\", filiere: 'FUS' }\r\n]\r\nexport function inscriptionReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_INSCRIPTION:\r\n            return [...state, action.payload]\r\n        case REMOVE_INSCRIPTION:\r\n            return [...state.filter((inscription) => inscription.id !== action.payload)]\r\n\r\n        case EDIT_INSCRIPTION:\r\n            const Editinscriprtion = state.find(elm => elm.id == action.payload.id);\r\n            Editinscriprtion.nom = action.payload.nom;\r\n            Editinscriprtion.filiere = action.payload.filiere;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AAAA,SAASA,eAAe,EAAEC,kBAAkB,EAAEC,gBAAgB,QAAQ,oBAAoB;AAC1F,MAAMC,YAAY,GAAG,CACjB;EAAEC,EAAE,EAAE,CAAC;EAAEC,GAAG,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAM,CAAC,EACnC;EAAEF,EAAE,EAAE,CAAC;EAAEC,GAAG,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAiB,CAAC,EAC9C;EAAEF,EAAE,EAAE,CAAC;EAAEC,GAAG,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAS,CAAC,EACtC;EAAEF,EAAE,EAAE,CAAC;EAAEC,GAAG,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAiB,CAAC,EAC9C;EAAEF,EAAE,EAAE,CAAC;EAAEC,GAAG,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAM,CAAC,CACtC;AACD,OAAO,SAASC,kBAAkB,GAA+B;EAAA,IAA9BC,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM;EAC3D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKV,eAAe;MAChB,OAAO,CAAC,GAAGQ,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;IACrC,KAAKV,kBAAkB;MACnB,OAAO,CAAC,GAAGO,KAAK,CAACI,MAAM,CAAEC,WAAW,IAAKA,WAAW,CAACT,EAAE,KAAKK,MAAM,CAACE,OAAO,CAAC,CAAC;IAEhF,KAAKT,gBAAgB;MACjB,MAAMY,gBAAgB,GAAGN,KAAK,CAACO,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACZ,EAAE,IAAIK,MAAM,CAACE,OAAO,CAACP,EAAE,CAAC;MACvEU,gBAAgB,CAACT,GAAG,GAAGI,MAAM,CAACE,OAAO,CAACN,GAAG;MACzCS,gBAAgB,CAACR,OAAO,GAAGG,MAAM,CAACE,OAAO,CAACL,OAAO;MACjD,OAAOE,KAAK;IAEhB;MACI,OAAOA,KAAK;EAAC;AAEzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}