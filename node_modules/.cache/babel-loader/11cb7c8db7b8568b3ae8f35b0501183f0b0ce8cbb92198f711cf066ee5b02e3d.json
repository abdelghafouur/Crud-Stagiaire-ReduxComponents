{"ast":null,"code":"const initialState = {\n  count: 0\n};\nexport function countReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        count: state.count + parseInt(action.payload)\n      };\n    case \"DECREMENT\":\n      return {\n        count: state.count - parseInt(action.payload)\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","count","countReducer","state","action","type","parseInt","payload"],"sources":["E:/Ofppt  2 eme annee/Cours Classe/C12- DÃ©velopper en Front-end/Seance 2/Seance 2 Exp/ReactTest7/test7/src/Redux2023/Reducers/countReducer.js"],"sourcesContent":["const initialState = {count:0}\r\nexport function countReducer(state=initialState,action)\r\n{\r\n\tswitch(action.type)\r\n{\r\n\tcase \"INCREMENT\" :\r\n\t\treturn {count:state.count+parseInt(action.payload)};\r\n\tcase \"DECREMENT\" :\r\n\t\treturn {count:state.count-parseInt(action.payload)};\r\n\tdefault :\r\n\t\treturn state;\r\n}\r\n}"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EAACC,KAAK,EAAC;AAAC,CAAC;AAC9B,OAAO,SAASC,YAAY,GAC5B;EAAA,IAD6BC,KAAK,uEAACH,YAAY;EAAA,IAACI,MAAM;EAErD,QAAOA,MAAM,CAACC,IAAI;IAElB,KAAK,WAAW;MACf,OAAO;QAACJ,KAAK,EAACE,KAAK,CAACF,KAAK,GAACK,QAAQ,CAACF,MAAM,CAACG,OAAO;MAAC,CAAC;IACpD,KAAK,WAAW;MACf,OAAO;QAACN,KAAK,EAACE,KAAK,CAACF,KAAK,GAACK,QAAQ,CAACF,MAAM,CAACG,OAAO;MAAC,CAAC;IACpD;MACC,OAAOJ,KAAK;EAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}